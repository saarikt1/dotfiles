" Set compatibility to Vim only.
set nocompatible

" Show command when typing it
set showcmd

" Wrap long lines on breakat characters, not in the middle of words
set linebreak

let maplocalleader = "\\"
let mapleader = "\\"

" fzf shortcuts
nmap <Leader>f :GFiles<CR>
nmap <Leader>F :Files<CR>
nmap <Leader>b :Buffers<CR>
nmap <Leader>h :History<CR>
nmap <Leader>t :BTags<CR>
nmap <Leader>T :Tags<CR>
nmap <Leader>l :BLines<CR>
nmap <Leader>L :Lines<CR>
nmap <Leader>' :Marks<CR>
nmap <Leader>/ :Ag<Space>
nmap <Leader>H :Helptags!<CR>
nmap <Leader>: :History:<CR>

" Sets relative line numbering
:set number relativenumber

" Toggless relative and absolute line numbering based on mode and focus
:augroup numbertoggle
:  autocmd!
:  autocmd BufEnter,FocusGained,InsertLeave * set relativenumber
:  autocmd BufLeave,FocusLost,InsertEnter   * set norelativenumber
:augroup END

" Turn on syntax highlighting
syntax enable

" Fixes issues when using set termuicolors with tmux
let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
set t_Co=256

" Enable true color support
if has('termguicolors')
  set termguicolors
endif

" Use colorscheme everforest
set background=dark
packadd! everforest
let g:everforest_better_performance = 1
colorscheme everforest

" For plug-ins to load correctly.
filetype plugin indent on

" Allow hidden buffers
set hidden

" Finding files
" Search down into subfolders, provide tab completion
set path+=**

" Make sure that tag files are search upwards in the folder structure up to /
set tags=tags;/

" Display all matching files when tab completing
set wildmenu

" Ignore node modules and build from file search
set wildignore+=**/node_modules/**
set wildignore+=**/build/**
set wildignore+=**/coverage/**

" show existing tab with 2 spaces width
set tabstop=2
" when indenting with '>', use 2 spaces width
set shiftwidth=2
" On pressing tab, insert 2 spaces
set expandtab

" Automatically source .vimrc
autocmd! bufwritepost .vimrc source % | echom "Reloaded $VIMRC"

" Toggles the cursorline between insert and normal modes
:autocmd InsertEnter * set cul
:autocmd InsertLeave * set nocul

" Display 5 lines above/below the cursor when scrolling with a mouse.
set scrolloff=5

" If file is changed somewhere else, re-read it
set autoread

" Increase the editable history
if &history < 1000
  set history=1000
endif

" Fixes common backspace problems
set backspace=indent,eol,start

" Speed up scrolling in Vim
set ttyfast
set scroll=5

" Show statusline
set laststatus=2

" Display options
set showmode

" Highlight matching pairs of brackets. Use the '%' character to jump between them.
set matchpairs+=<:>

" Display different types of white spaces.
set list
set listchars=tab:›\ ,trail:•,extends:#,nbsp:.

" Encoding
set encoding=utf-8

" Remove search highlighting with double Esc
nnoremap <silent> <Esc><Esc> :let @/=""<CR>

" Set the timeout vim waits for exmple after esc. Fixes the delay issue when changing the cursor between different modes.
set ttimeoutlen=5

" Enables ctags
set tags=tags

" Change cursor style in different modes
let &t_SI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=1\x7\<Esc>\\"
let &t_SR = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=2\x7\<Esc>\\"
let &t_EI = "\<Esc>Ptmux;\<Esc>\<Esc>]50;CursorShape=0\x7\<Esc>\\"

" Configurations for the plugin tslime
let g:tslime_ensure_trailing_newlines = 1
let g:tslime_normal_mapping = '<localleader>q'
let g:tslime_visual_mapping = '<localleader>q'
let g:tslime_vars_mapping = '<localleader>Q'

